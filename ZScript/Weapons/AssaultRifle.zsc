/*

	-MA75B Assault Rifle
	
*/

Class MarAssaultRifle_Ammo : Ammo
{
    Default
    {
		Inventory.PickupMessage "[.32 Caliber Assault Rifle Ammo]";
		Inventory.Amount 52;
		Inventory.MaxAmount 780;
		Ammo.DropAmount 52;
		Ammo.BackpackAmount 156;
		Ammo.BackpackMaxAmount 780; //1040
		Inventory.PickUpSound "Marathon/Items/Ammo";
		Inventory.Icon "";
	}
	States
    {
    Spawn:
		MA75 Y -1;
		Stop;
	}
}

Class MarGrenadeLauncher_Ammo : Ammo
{
    Default
    {
		Inventory.PickupMessage "[Grenade Pack]";
		Inventory.Amount 7;
		Inventory.MaxAmount 56;
		Ammo.DropAmount 7;
		Ammo.BackpackAmount 7;
		Ammo.BackpackMaxAmount 56; //98
		Inventory.PickUpSound "Marathon/Items/Ammo";
		Inventory.Icon "";
	}
	States
    {
    Spawn:
		MA75 X -1;
		Stop;
	}
}

class MarAssaultRifle_Weapon : MarathonWeapon
{
    Default
    {
		Weapon.SelectionOrder 1000;
		ZWeapon.MagazineSize 52;
        Weapon.AmmoUse1 1;
        Weapon.AmmoGive1 52;
        Weapon.AmmoType1 "MarAssaultRifle_Ammo";
		
		//gl
		MarathonWeapon.MagazineSize2 7;
        Weapon.AmmoUse2 1;
        Weapon.AmmoGive2 7;
        Weapon.AmmoType2 "MarGrenadeLauncher_Ammo";
		
		Weapon.WeaponScaleX 1.4;
		Weapon.WeaponScaleY 1.4;
		
		Inventory.PickupMessage "( MA-75B Assault Rifle )";
		Tag "MA-75B Assault Rifle";
    }

	override void PostBeginPlay()
    {
        Super.PostBeginPlay();
		secondarymode = 1;
    }

    States
    {
    Ready:
		MA75 A 0 A_JumpIf(invoker.ammocount>invoker.magazinesize, "Reload");
		MA75 A 0 {A_Overlay(29,"RecoilShit");A_Overlay(31,"altfire.ready",true);}
        MA75 A 1 ZWL_WeaponReady(ZRF_NoPartialReload);
        Loop;

    Deselect:
		#### # 0 A_JumpIf(health <= 0, "Dead.Ass");
		MA75 A 0 A_ClearOverlays(29,31);
        MA75 A 1 A_Lower(8);
        Wait;
    Select:	
        MA75 A 1 A_Raise(8);
        Wait;
		
	altfire.ready:
		TNT1 A 1
		{
			if(invoker.ammocount2>0&&invoker.IsPressing(BT_ALTATTACK))
			{PB_SetWeaponState("altfire.shoot",31);}
			else if(invoker.ammocount2<1&&countinv(invoker.ammotype2)>0){PB_SetWeaponState("altfire.reload",31);}
		}
		loop;
	altfire.shoot:
		TNT1 A 0 A_JumpIf(waterlevel == 3, "altfire.fail");
		TNT1 A 28 
		{
			A_AlertMonsters();
			A_StartSound("marathon/weapons/ma75/grenade",CHAN_6,CHANF_OVERLAP);
			ZWL_FireProjectile("MarGrenade_Projectile",0,-1,flags:ZPF_DontUseAmmo);
			A_ChangeVelocity(Cos(Pitch)*-1.75,0,Sin(Pitch)*1.75,CVF_RELATIVE);
			PB_RecoilAnim(PSP_WEAPON,-4);
			invoker.ammoCount2--;
		}
		goto altfire.ready;
	altfire.fail:
		TNT1 A 2; //A_StartSound("marathon/weapons/ma75/dry",CHAN_7,CHANF_OVERLAP);
		goto altfire.ready;
	altfire.reload:
		TNT1 A 28 A_StartSound("marathon/weapons/ma75/grenadereload",CHAN_7,CHANF_OVERLAP);
		TNT1 A 1 ZWL_ReloadAlt();
		goto altfire.ready;
		
	Fire:
		MA75 A 0 A_JumpIf(waterlevel == 3, "Fire.Fail");
		//MA75 A 0 A_Overlay(25,"oddsound",true);
		//goto fire.classic;
	Fire.2:
		MA75 A 0 A_JumpIf(waterlevel == 3, "Fire.Fail");
		MA75 B 1 bright 
		{
			PB_RecoilAnim(PSP_WEAPON,frandom(1,3));
			A_AlertMonsters();
			A_Recoil(0.075);
			A_WeaponOffset(frandom(-1,1),flags:WOF_INTERPOLATE);
			ZWL_FireHitscan(8,random(9,15),puffType:"MarBulletPuff");
			A_StartSound("marathon/weapons/ma75/fire",CHAN_WEAPON,CHANF_OVERLAP,pitch:frandom(0.98,1.03));
			ZWL_EjectCasing("MarRifle_Casing",false,-12,10,7,(27,0,-13));
		}
		MA75 C 1;
		MA75 A 0 ZWL_JumpIfEmpty("Fire.End");
		MA75 C 1 ZWL_Refire("Fire.2");
		MA75 AAAAA 1 
		{
			ZWL_Refire("Fire");
			A_ClearOverlays(25,25);
		}
		Goto Ready;
	Fire.Classic:
		//MA75 A 0 A_Overlay(25,"oddsound",true);
	Fire.Classic2:
		MA75 A 0 A_JumpIf(waterlevel == 3, "Fire.Fail");
		MA75 B 1 bright 
		{
			A_AlertMonsters();
			A_Recoil(0.075);
			PB_RecoilAnim(PSP_WEAPON,2);
			ZWL_FireHitscan(8,random(9,15),puffType:"MarBulletPuff");
			ZWL_EjectCasing("MarRifle_Casing",false,-12,10,7,(22,0,-10));
			A_StartSound("marathon/weapons/ma75/fire",CHAN_WEAPON);
		}
		MA75 A 1;
		MA75 A 0 ZWL_JumpIfEmpty("Fire.End");
		MA75 A 1 ZWL_Refire("Fire.Classic2");
		MA75 AAAAA 1 
		{
			ZWL_Refire("Fire.Classic");
			A_ClearOverlays(25,25);
		}
		Goto Ready;
		
		
	oddsound:
		TNT1 A 3 A_StartSound("marathon/weapons/ma75/fire",CHAN_WEAPON);
		TNT1 AA 2 A_StartSound("marathon/weapons/ma75/fire",CHAN_WEAPON);
		TNT1 A random(2,4) A_StartSound("marathon/weapons/ma75/fire",CHAN_WEAPON);
		loop;
		
		
	Fire.End:
		MA75 C 1 A_ClearOverlays(25,25);
		MA75 A 4;
		Goto Ready;
	Fire.Fail:
		MA75 A 3 {A_StartSound("marathon/weapons/ma75/dry",CHAN_7,CHANF_OVERLAP);A_ClearOverlays(25,25);}
		goto ready;
	Reload:
		MA75 A 0 A_ClearOverlays(30,31);
		MA75 D 10 
		{
			ZWL_Unload(0,true);
			A_StartSound("marathon/weapons/ma75/reload",CHAN_7,CHANF_OVERLAP);
		}
		MA75 E 11 ZWL_Reload(0,true);
		MA75 F 10;
		MA75 A 5;
		MA75 A 0 ZWL_Refire("Fire");
		Goto Ready;
    Spawn:
        MA75 Z -1;
        Stop;
    }
}

class MarGrenade_Projectile : ZExplosive
{
    Default
    {
        Health 25;
		Radius 6;
		Height 6;
		Speed 20;
		Scale 0.55;
		Mass 1;
		Gravity 0.125;
		DamageFunction (10);
		Obituary "$OB_MPROCKET";

		-NoGravity
        -RocketTrail
		+ForceRadiusDMG
        +ForceXYBillboard
		//+ForcePain
        +RollSprite
		+RollCenter
		-NoBlockMap
    }

	States
	{
	Spawn:
		MA75 G 1 Bright A_SpawnItemEx("MarGrenade_Smoke");
		MA75 ############## 1 Bright A_SpawnItemEx("MarGrenade_Smoke");
		MA75 # 1;
		wait;
	Death:
		FX02 A 4 bright 
		{
			A_SetGravity(0);
			A_SetScale(1.2,1.2);
			A_Explode(90,96);
			ZWL_Explode(90,96,20,"explosive");
			A_StartSound("marathon/weapons/ma75/boom",CHAN_BODY,CHANF_OVERLAP,1,0.7);
		}
		FX02 BCDEF 4 bright;
		stop;
	}
}

class MarGrenade_Smoke : Actor
{
	Default
	{
		+DONTSPLASH;
		Radius 1;
		Height 1;
		Speed 0;
		+NoBlockmap;
		+NoGravity;
		+FORCEXYBILLBOARD;
		+CLIENTSIDEONLY;
		+RollSprite
		+RollCenter
		+DontBlast
		Scale 0.15;
	}
		States
	{
	Spawn:
		TNT1 A 2;
		FX01 CD 1 BRIGHT;
		FX00 ABCD 1;
		Stop;
	}
}