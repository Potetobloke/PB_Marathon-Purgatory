/*

	-SPNKR-XP SSM
	
*/

Class MarWMC_Ammo : Ammo
{
    Default
    {
		Inventory.PickupMessage "[Heavy Duty Battery]";
		Inventory.Amount 5;
		Inventory.MaxAmount 25;
		Ammo.DropAmount 5;
		Ammo.BackpackAmount 5;
		Ammo.BackpackMaxAmount 25; //32
		Inventory.PickUpSound "Marathon/Items/Ammo";
		Inventory.Icon "";
	}
	States
    {
    Spawn:
		WMC0 Y -1;
		Stop;
	}
}

class MarWaveMotionCannon_Weapon : MarathonWeapon
{

	int charging;

    Default
    {
		ZWeapon.MagazineSize 5;
        Weapon.SelectionOrder 1000;
        Weapon.AmmoUse1 1;
        Weapon.AmmoGive1 5;
        Weapon.AmmoType1 "MarWMC_Ammo";
		//Weapon.AmmoType2 "MarAssaultRifle_Grenades";
		Weapon.WeaponScaleX 1.25;
		Weapon.WeaponScaleY 1.25;
		
		Inventory.PickupMessage "( ONI-71 Wave Motion Cannon )";
		Tag "ONI-71 Wave Motion Cannon";
    }



	//thank you melodica, very cool!!!!!!

	// a combination of ZWL's hitscan attacks and Melodica's 3d beam effect
	action void Melo_FireBeam(double accuracy, int damage,
                                double range = 8192, Name damageType = 'Normal', class<Actor> puffType = "ZBulletPuff",
                                int bscale = 2.1,Vector3 offsets = (0, 0, 0),int beam = 1,int flags = 0)
    {

	
	    FTranslatedLineTarget lineTarget;
        double aimPitch = AimLineAttack(angle, range, lineTarget);
        double aimAngle = lineTarget.lineTarget ? lineTarget.attackAngleFromSource : angle; // TODO: actually use aimAngle
		
		//da beam
		
		Vector3 baseDirection = (Cos(pitch) * Cos(angle), Cos(pitch) * Sin(angle), -Sin(pitch));
        Vector3 right = (Cos(angle-90.0), Sin(angle-90.0), 0.0);
        Vector3 up = (Cos(pitch-90.0) * Cos(angle), Cos(pitch-90.0) * Sin(angle), -Sin(pitch-90.0));
		
		double baseAngle = VectorAngle(baseDirection.x, baseDirection.y);
        baseDirection.xy = RotateVector(baseDirection.xy, -baseAngle);
        double basePitch = -VectorAngle(baseDirection.x, baseDirection.z);

        offsets.y *= -1;  // The +y axis is to the right, for offsets
        let xz = RotateVector((offsets.x, offsets.z), -basePitch);
        offsets.x = xz.x;
        offsets.z = xz.y;
        offsets.xy = RotateVector(offsets.xy, baseAngle);

		invoker.ammocount-=invoker.AmmoUse1;

		flinetracedata tlt;
		linetrace(
			aimangle,
			range,
			aimpitch,
			offsetz:offsets.z+42,
			offsetforward:offsets.x,
			offsetside:offsets.y,
			data:tlt
		);

		double dist = int(tlt.Distance);	
		
		double zOffset = (height/2+MarSecurityOfficer(self).attackZOffset) * player.crouchFactor;
		
		for (int i = 0; i < beam; ++i)
        {
			actor laser = Spawn("MarWMC_Beam",pos+(offsets.x,offsets.y,zOffset+6));
			laser.angle = aimAngle;
			laser.pitch = aimPitch*-1 - 90;
			laser.scale.y = dist/112;//clamp(dist, 0, 128);
			laser.scale.x = bscale+i*2;
			laser.alpha = 1.0;
		}
		
		Vector3 laserOfs = tlt.hitLocation;
		laserOfs-=tlt.hitdir;
		
		spawnpuff(pufftype,laserofs,angle,0,0);
    }

    States
    {
    Ready:
		WMC0 A 0 A_JumpIf(invoker.ammocount>invoker.magazinesize, "Reload.Instant");
		WMC0 A 0 A_Overlay(29,"RecoilShit");
        WMC0 A 1 ZWL_WeaponReady(ZRF_NoPartialReload);
        Loop;

    Deselect:
		#### # 0 A_JumpIf(health <= 0, "Dead.Ass");
		WMC0 A 0 A_ClearOverlays(28,35);
        WMC0 A 1 A_Lower(2);
        Wait;
	Red.Flash:
		WMF0 A 0
		{
			A_OverlayFlags(OverlayID(),PSPF_ADDWEAPON|PSPF_RENDERSTYLE,true);
			A_OverlayRenderStyle(OverlayID(),STYLE_Add);
		}
		WMF0 ABCD 1 Bright;
		stop;
    Select:	
        WMC0 A 1 A_Raise(2);
        Wait;

	Fire:
        //WMC0 A 0 A_JumpIf(waterlevel > 3, "Fire.Fail");
        WMC0 A 2;
		WMC0 A 0 ZWL_Refire("Charge");
	Fire.Shoot:
        WMC0 # 0
		{
			A_ClearOverlays(31,35);
			A_Recoil(8);
			A_StartSound("marathon/weapons/wmc/fire",CHAN_WEAPON);
			A_AlertMonsters();
			A_Overlay(-5,"Red.Flash");
			
			/*	String shot;
			
				let crg=invoker.charging;
				if 		(crg==1)	shot = "MarWMC_Shot2";
				else if (crg==2)	shot = "MarWMC_Shot3";
				else if (crg==3)	shot = "MarWMC_Shot4";
				else				shot = "MarWMC_Shot1";
				
			ZWL_FireProjectile(shot,0,-1,offset:(0,0,3));*/
			
			String shot;
			
				let crg=invoker.charging;
				if 		(crg==1 && invoker.ammocount>1)	shot = "MarWMC_Shot2";
				else if (crg==2 && invoker.ammocount>2)	shot = "MarWMC_Shot3";
				else if (crg==3 && invoker.ammocount>3)	shot = "MarWMC_Shot4";
				else									shot = "MarWMC_Shot1";
			
			int beam;
				if 		(crg==1 && invoker.ammocount>1)	beam = 2;
				else if (crg==2 && invoker.ammocount>2)	beam = 3;
				else if (crg==3 && invoker.ammocount>3)	beam = 4;
				else									beam = 1;
				
			invoker.ammoUse1=beam;
			
			Melo_FireBeam(0,200,puffType:shot,offsets:(0,-15,8),beam:beam);
		}
		//look at this mess
		#### D 1 {A_WeaponOffset(-4,30,WOF_INTERPOLATE);invoker.charging=0;invoker.ammoUse1=1;}
        #### B 1 A_WeaponOffset(-4,29,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,28,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,27,WOF_INTERPOLATE);
        #### # 1 A_WeaponOffset(-4,26,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,25,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,24,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,23,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,22,WOF_INTERPOLATE);
        #### C 1 {A_WeaponOffset(-4,21,WOF_INTERPOLATE);A_StartSound("marathon/weapons/wmc/barrel",CHAN_7);}
		#### # 1 A_WeaponOffset(-4,22,WOF_INTERPOLATE);
        #### # 1 A_WeaponOffset(-4,23,WOF_INTERPOLATE);
        #### # 1 A_WeaponOffset(-4,26,WOF_INTERPOLATE);
        #### D 1 A_WeaponOffset(-4,29,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-4,30,WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-3,31,WOF_INTERPOLATE);
        #### A 1 A_WeaponOffset(-1,32,WOF_INTERPOLATE);
		#### A 3 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		#### # 0 ZWL_JumpIfEmpty("Fire.End");
		#### # 1 ZWL_Refire("Fire");
        Goto Ready;
	Charge:
		WMC0 A 1 A_Overlay(31,"WMC.ChargeOverlay");
	Charge.Hold:
		WMC0 A 1;
		WMC0 A 0 ZWL_Refire("Charge.Hold");
		goto fire.shoot;
	Fire.End:
		WMC0 A 1;
		Goto Ready;
	Fire.Fail:
		WMC0 # 8;
		Goto Ready;
	Reload:
		WMC0 ############################################## 1 A_Lower(2);
		WMC0 # 30 A_StartSound("marathon/weapons/spnkr/load",CHAN_7,pitch:0.86);
		WMC0 # 32 ZWL_Reload();
		WMC0 ############################################## 1 A_Raise(2);
		Goto Ready;
	WMC.ChargeOverlay:
		WMC1 A 0
		{
			A_OverlayFlags(OverlayID(),PSPF_RENDERSTYLE,true);
			A_OverlayRenderStyle(OverlayID(),Style_ADD);
			A_AlertMonsters(256);
		}
		WMC1 A 2 bright A_StartSound("marathon/weapons/wmc/charge",CHAN_6);
		WMC1 BCDEFGHIJKL 2 bright;
		TNT1 A 1
		{
		
			invoker.charging++;
			A_StartSound((invoker.charging>2)?"marathon/weapons/wmc/beep2":"marathon/weapons/wmc/beep",CHAN_5);
			
			if (invoker.charging==2)
			{A_Overlay(32,"WMC.LvlOverlay2");}
			else if (invoker.charging==1)A_Overlay(33,"WMC.LvlOverlay");
			
			A_OverlayFlags(32,PSPF_RENDERSTYLE,true);
			A_OverlayRenderStyle(32,Style_ADD);
		}
		WMC1 LZLZLZ 1 bright;
		TNT1 A 10
		{
			if (invoker.charging>2)
			{PB_SetWeaponState("Done",OverlayID());}
		}
		loop;
	done:
		WMC1 L -1 bright;
		stop;
		
	WMC.LvlOverlay:		
		WMC1 MZMZMZ 1 bright; 
		WMC1 M 1 bright; 
		wait;
	WMC.LvlOverlay2:	
		WMC1 NZNZNZ 1 bright; 
		WMC1 N 1 bright; 
		wait;
	
    Spawn:
        WMC0 Z -1;
        Stop;
    }
}

class MarWMC_Beam : Actor
{	
	Default
	{
		+BRIGHT
		+NOINTERACTION
		+MASKROTATION
		VisibleAngles -180,180;
		VisiblePitch -180,180;
		RenderRadius 2048;
		XScale 6.5;
		RenderStyle "Add";
	}
	
	States
	{
		Spawn:
			WMC2 A 0 NODELAY {bINTERPOLATEANGLES = TRUE;}
			WMC2 A 4;
			WMC2 A 2 A_FadeOut(0.15);
			wait;
	}
}

class MarWMC_Shot1 : MarFusion_Projectile
{
    Default
    {
		Radius 35;
		Height 30;
		Speed 75;
		+puffonactors
		DamageType "Plasma";
		DamageFunction (random(210,230));
		Scale 1.4;
		RenderStyle "Add";
		+FoilBuddha
		+FoilInvul
		+HitOwner
		+ForceRadiusDMG
		+EXTREMEDEATH
		+ForcePain
		+PUFFGETSOWNER
		-NOEXTREMEDEATH
    }
	
	override void Tick()
    {
        Actor.Tick();
	}

	States
	{
      Spawn:
        /*WMC2 AAABBBCCC 1 Bright 
		{
			A_SpawnItemEx("MarWMC_Trail",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
			A_SpawnItemEx("MarAddOverDraw",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			//A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
		}
        Loop;*/
       Death:
		WMC2 D 0 Bright 
		{
			A_AlertMonsters();
			ZWL_Explode(425,256,128,"Plasma");
			A_StartSound("marathon/weapons/wmc/boom",CHAN_WEAPON,CHANF_OVERLAP,1,0.4,pitch:1.05);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			ZWL_ProjectileShrapnel("MarWMC_ShotSmall",4);
		}
		WMC4 BBCC 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 D 4;
		stop;
	}
}

class MarWMC_Shot2 : MarWMC_Shot1
{
    Default
    {
		Speed 80;
		DamageFunction (random(250,270));
		Scale 1.6;
    }

	States
	{
      Spawn:
        /*WMC2 AAAABBBBCCCC 1 Bright 
		{
			A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
			A_SpawnItemEx("MarAddOverDraw",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			//A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
		}
        Loop;*/
       Death:
		WMC2 D 0 Bright 
		{
			A_AlertMonsters();
			ZWL_Explode(450,312,192,"Plasma");
			A_StartSound("marathon/weapons/wmc/boom",CHAN_WEAPON,CHANF_OVERLAP,1,0.4,pitch:0.98);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			ZWL_ProjectileShrapnel("MarWMC_ShotSmall",8);
		}
		WMC4 ABBBCCC 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 D 6;
		stop;
	}
}

class MarWMC_Shot3 : MarWMC_Shot1
{
    Default
    {
		Speed 85;
		DamageFunction (random(260,280));
		Scale 1.8;
    }

	States
	{
      Spawn:
        /*WMC2 AAAAABBBBBCCCCC 1 Bright 
		{
			A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
			A_SpawnItemEx("MarAddOverDraw",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			//A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
		}
        Loop;*/
       Death:
		WMC2 D 0 Bright 
		{
			A_AlertMonsters();
			ZWL_Explode(475,392,256,"Plasma");
			A_StartSound("marathon/weapons/wmc/boom",CHAN_WEAPON,CHANF_OVERLAP,1,0.4,pitch:0.95);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			ZWL_ProjectileShrapnel("MarWMC_ShotSmall",16);
		}
		WMC4 AABBBBCCCC 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 D 8;
		stop;
	}
}

class MarWMC_Shot4 : MarWMC_Shot1
{
    Default
    {
		Speed 90;
		DamageFunction (random(290,300));
		Scale 2.0;
    }

	States
	{
      Spawn:
        /*WMC2 AAAAABBBBBCCCCC 1 Bright 
		{
			A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
			A_SpawnItemEx("MarAddOverDraw",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			//A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
		}
		WMC2 A 0 ZWL_ProjectileShrapnel("MarWMC_ShotSmall",3);
        Loop;*/
       Death:
		WMC2 D 0 Bright 
		{
		
			if(tracer){
			tracer.A_SetBlend("ff ff ff",0.1,32);
			tracer.A_SpawnItemEx((tracer.bSpriteFlip==true)?"MarWMCHit_Flipped":"MarWMCHit", 
			flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
			}
			
			//if(!(tracer is "PlayerPawn")){tracer.destroy();}}
		
			A_AlertMonsters();
			ZWL_Explode(500,435,312,"Plasma");
			A_StartSound("marathon/weapons/wmc/boom",CHAN_WEAPON,CHANF_OVERLAP,1,0.4,pitch:0.8);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 A 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			ZWL_ProjectileShrapnel("MarWMC_ShotSmall",24);
		}
		WMC4 AABBBBCCCC 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
		}
		WMC4 D 8;
		stop;
	}
}

class MarWMC_ShotSmall : MarWMC_Shot1
{
    Default
    {
		Speed 75;
		+ForcePain
		DamageFunction (random(10,20));
		Scale 0.6;
		
		+SEEKERMISSILE
    }

	States
	{
      Spawn:
        WMC2 AABBCC 1 Bright 
		{
			A_SpawnItemEx("MarWMC_Trail",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
			A_SpawnItemEx("MarAddOverDraw",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			A_SeekerMissile(0,65, SMF_LOOK | SMF_PRECISE | SMF_CURSPEED,200,90);
			//A_SpawnItemEx("MarWMC_Trail2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL);
		}
        Loop;
       Death:
		WMC2 D 0 Bright 
		{
			A_AlertMonsters();
			ZWL_Explode(30,128,64,"Plasma");
			A_StartSound("marathon/weapons/wmc/boom",CHAN_WEAPON,CHANF_OVERLAP,pitch:1.4);
		}
		WMC4 ABC 2
		{
			A_SpawnItemEx("MarAddOverDraw2",flags:SXF_TRANSFERPITCH|SXF_TRANSFERROLL
			|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
			
			if(tracer){
			tracer.A_SetBlend("ff ff ff",0.1,32);
			tracer.A_SpawnItemEx((tracer.bSpriteFlip==true)?"MarWMCHit_Flipped":"MarWMCHit", 
			flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
			}
		}
		WMC4 D 2;
		stop;
	}
}

class MarWMCHit : MarFusionHit
{
	default
	{}
	states
	{
	Spawn:
		#### # 0 NoDelay {bspriteflip=false;}
		#### # 0
		{
			A_SetRenderStyle(1.0,STYLE_Stencil);
			SetShade("#ff0000");
		}
		#### # 1 Bright {A_FadeOut(0.25);A_SetScale(scalex*1.02,scaley*1.02);A_SpriteOffset(frandom(-1,1),frandom(-1,1));}
		wait;
	}
}


class MarWMCHit_Flipped : MarFusionHit
{
	default
	{}
	states
	{
	Spawn:
		#### # 0 NoDelay {bspriteflip=true;}
		#### # 0
		{
			A_SetRenderStyle(1.0,STYLE_Stencil);
			SetShade("#ff0000");
		}
		#### # 1 Bright {A_FadeOut(0.25);A_SetScale(scalex*1.02,scaley*1.02);A_SpriteOffset(frandom(-1,1),frandom(-1,1));}
		wait;
	}
}


class MarWMC_Spray : Actor
{
	Default
	{
		+DONTSPLASH;
		Radius 1;
		Height 1;
		Speed 0;
		+NoBlockmap;
		+NoGravity;
		+FORCEXYBILLBOARD;
		+CLIENTSIDEONLY;
		+RollSprite
		+RollCenter
		+DontBlast
		RenderStyle "Add";
		Scale 0.4;
	}
		States
	{
	Spawn:
		WMC2 DEFG 2 BRIGHT;
		//FX00 ABECFDG 1;
		Stop;
	}
}

class MarAddOverDraw : Actor
{
	default
	{
		Alpha 1.0;
		RenderStyle "Add";
		+NOINTERACTION
		+FORCEXYBILLBOARD
	}

	states
	{
	Spawn:
		#### # 0 NoDelay A_SetScale(scalex*1.1,scaley*1.1);
		#### # 2 Bright {A_FadeOut(0.1);A_SetScale(scalex*1.02,scaley*1.02);A_SpriteOffset(frandom(-1,1),frandom(-1,1));}
		wait;
	}
}

class MarAddOverDraw2 : MarAddOverDraw
{
	default
	{
	}

	states
	{
	Spawn:
		#### # 3 Bright {A_FadeOut(0.5);A_SpriteOffset(frandom(-1,1),frandom(-1,1));}
		wait;
	}
}

class MarWMC_Trail : MarWMC_Spray
{
	Default
	{
		RenderStyle "Add";
		Scale 0.7;
		//+FlatSprite bruh i give up
	}
		//override void postbeginplay()
		//{a_setpitch(pitch+90);}
	
		States
	{
	Spawn:
		TNT1 A 2 nodelay; //{invoker.bFlatSprite=true;}
		WMC2 DEFG 3 BRIGHT;
		#### ###### 3 
		{
			A_FadeOut(0.05);
			scalex-=0.1;
			scaley-=0.1;
		}
		//FX00 ABECFDG 1;
		stop;
	}
}

class MarWMC_Trail2 : MarWMC_Trail
{
	Default
	{
		RenderStyle "Add";
		Scale 0.9;
	}
		States
	{
	Spawn:
		TNT1 A 2 nodelay;
		WMC2 DEFG 4 BRIGHT;
		#### ###### 4 
		{
			A_FadeOut(0.025);
			scalex-=0.1;
			scaley-=0.1;
		}
		stop;
	}
}

class MarRocket_Projectile_Homing : MarRocket_Projectile
{
    Default
    {
		DamageFunction (25);
		Obituary "$OB_MPROCKET";
		+SEEKERMISSILE
		+SCREENSEEKER
    }

	States
	{
	Spawn:
		SPNK A 1 Bright 
		{
			A_SpawnItemEx("MarRocket_Smoke");
			A_SeekerMissile(0,15, SMF_LOOK | SMF_PRECISE | SMF_CURSPEED,200,90);
		}
		Loop;
	Death:
		SPNK B 5 bright 
		{
			//A_SetRoll(90*frandom(1,4));
			A_AlertMonsters();
			A_SetScale(1,1);
			ZWL_Explode(210,192,90,"explosive");
			A_StartSound("marathon/weapons/spnkr/boom",CHAN_BODY,CHANF_OVERLAP,1,0.5);
		}
		SPNK CDE 5 bright;
		stop;
	}
}
